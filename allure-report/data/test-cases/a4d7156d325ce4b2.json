{
  "uid" : "a4d7156d325ce4b2",
  "name" : "测试购物车结算",
  "fullName" : "Testcases.pc.test_2buy.TestLogin#test_dz_orders",
  "historyId" : "32e827b2a8c56ca6ab70efa090cbfb51",
  "time" : {
    "start" : 1576260947223,
    "stop" : 1576260978224,
    "duration" : 31001
  },
  "description" : "这是定制片加入购物车的成功用例",
  "descriptionHtml" : "<p>这是定制片加入购物车的成功用例</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Testcases.pc.test_2buy.TestLogin object at 0x0000000004F88B00>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bacb221b75bd196bcf4f8bf53f349837\")>\n\n    @pytest.mark.smoke\n    @allure.story('测试购物车结算')\n    @allure.title('测试购物车结算')\n    @allure.description('这是定制片加入购物车的成功用例')\n    def test_dz_orders(self,open_url1):\n>       hp(open_url1).click_cart_new()\n\ntest_2buy.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\PageObjects\\pc\\home_page.py:49: in click_cart_new\n    self.check_window(hpl.go_cart_new, '进入购物车')\n..\\..\\common\\basepage.py:220: in check_window\n    self.click_element(loc,img_doc)\n..\\..\\common\\basepage.py:104: in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n..\\..\\common\\basepage.py:29: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bacb221b75bd196bcf4f8bf53f349837\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004F886D8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session_action",
    "time" : {
      "start" : 1576260682368,
      "stop" : 1576260682370,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "open_url1",
    "time" : {
      "start" : 1576260717094,
      "stop" : 1576260724503,
      "duration" : 7409
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "这是定制片加入购物车的成功用例",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <Testcases.pc.test_2buy.TestLogin object at 0x0000000004F88B00>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bacb221b75bd196bcf4f8bf53f349837\")>\n\n    @pytest.mark.smoke\n    @allure.story('测试购物车结算')\n    @allure.title('测试购物车结算')\n    @allure.description('这是定制片加入购物车的成功用例')\n    def test_dz_orders(self,open_url1):\n>       hp(open_url1).click_cart_new()\n\ntest_2buy.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\PageObjects\\pc\\home_page.py:49: in click_cart_new\n    self.check_window(hpl.go_cart_new, '进入购物车')\n..\\..\\common\\basepage.py:220: in check_window\n    self.click_element(loc,img_doc)\n..\\..\\common\\basepage.py:104: in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n..\\..\\common\\basepage.py:29: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bacb221b75bd196bcf4f8bf53f349837\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004F886D8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击进入购物车",
      "time" : {
        "start" : 1576260947223,
        "stop" : 1576260978223,
        "duration" : 31000
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"E:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"D:\\B2B\\PageObjects\\pc\\home_page.py\", line 49, in click_cart_new\n    self.check_window(hpl.go_cart_new, '进入购物车')\n  File \"D:\\B2B\\common\\basepage.py\", line 220, in check_window\n    self.click_element(loc,img_doc)\n  File \"D:\\B2B\\common\\basepage.py\", line 104, in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n  File \"D:\\B2B\\common\\basepage.py\", line 29, in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n  File \"E:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "9bf90d7a63d331c3",
      "name" : "log",
      "source" : "9bf90d7a63d331c3.txt",
      "type" : "text/plain",
      "size" : 897
    }, {
      "uid" : "de9a6f8948e39133",
      "name" : "stderr",
      "source" : "de9a6f8948e39133.txt",
      "type" : "text/plain",
      "size" : 1054
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "session_action::0",
    "time" : {
      "start" : 1576260982597,
      "stop" : 1576260982597,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "open_url1::0",
    "time" : {
      "start" : 1576260979448,
      "stop" : 1576260982581,
      "duration" : 3133
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试购物车结算"
  }, {
    "name" : "feature",
    "value" : "每日用例-加购"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases.pc"
  }, {
    "name" : "suite",
    "value" : "test_2buy"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "JS-CS-002"
  }, {
    "name" : "thread",
    "value" : "18060-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.pc.test_2buy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "smoke" ]
  },
  "source" : "a4d7156d325ce4b2.json",
  "parameterValues" : [ ]
}