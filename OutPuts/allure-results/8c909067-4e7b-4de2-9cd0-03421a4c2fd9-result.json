{"name": "测试登录正常", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'https://login-m.yjq.com/' == 'https://m.yjq.com/'\n  - https://login-m.yjq.com/\n  ?         ------\n  + https://m.yjq.com/", "trace": "self = <Testcases.m.test_2buy.TestLogin object at 0x0000000004D989E8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c9e9cda4ae2d7f51f4e63cce86fa777\")>\n\n    @pytest.mark.demo\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是密码登录的成功用例')\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_pwd(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            # ac=ActionChains(open_url1)\n            # ac.click(self.open_url1.find_element(By.XPATH,'//button[text()=\"登录\"]'))\n            # ac.perform()\n            time.sleep(2)\n            assert True == ip(open_url1).login_check()\n            assert unquote(open_url1.current_url, encoding='utf-8') == 'https://m.yjq.com/'\n        except AssertionError as e:\n            Filelist = get_filelist(contants.reports_screen)\n            with open(Filelist[0], \"rb\") as f:\n                context = f.read()\n                allure.attach(context, \"错误图片\", attachment_type=allure.attachment_type.PNG)\n>               raise e\n\ntest_2buy.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Testcases.m.test_2buy.TestLogin object at 0x0000000004D989E8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c9e9cda4ae2d7f51f4e63cce86fa777\")>\n\n    @pytest.mark.demo\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是密码登录的成功用例')\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_pwd(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            # ac=ActionChains(open_url1)\n            # ac.click(self.open_url1.find_element(By.XPATH,'//button[text()=\"登录\"]'))\n            # ac.perform()\n            time.sleep(2)\n            assert True == ip(open_url1).login_check()\n>           assert unquote(open_url1.current_url, encoding='utf-8') == 'https://m.yjq.com/'\nE           AssertionError: assert 'https://login-m.yjq.com/' == 'https://m.yjq.com/'\nE             - https://login-m.yjq.com/\nE             ?         ------\nE             + https://m.yjq.com/\n\ntest_2buy.py:39: AssertionError"}, "description": "这是密码登录的成功用例", "steps": [{"name": "验证码登录", "status": "passed", "parameters": [{"name": "user", "value": "'17625188013'"}, {"name": "passwd", "value": "'ghm1234'"}], "start": 1575990655576, "stop": 1575990655865}], "attachments": [{"name": "错误图片", "source": "624bbb85-3e80-4bb4-91fd-b92de52da0bc-attachment.png", "type": "image/png"}, {"name": "log", "source": "c48f463b-9444-4c63-acf8-479e3ff6e4a3-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7d0ebf8f-c952-47bd-b7cb-6e59e2101378-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b72ba4c8-25b2-47e6-87fa-9d91f2b9a75f-attachment.txt", "type": "text/plain"}], "start": 1575990655575, "stop": 1575990657924, "uuid": "0302e573-dca4-4901-b8f9-964225722215", "historyId": "7eafb15f4efb110febad6d6632ce1448", "fullName": "Testcases.m.test_2buy.TestLogin#test_login", "labels": [{"name": "story", "value": "登录"}, {"name": "feature", "value": "每日用例-加购"}, {"name": "tag", "value": "demo"}, {"name": "parentSuite", "value": "Testcases.m"}, {"name": "suite", "value": "test_2buy"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "JS-CS-002"}, {"name": "thread", "value": "10048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.m.test_2buy"}]}